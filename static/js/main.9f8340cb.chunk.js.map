{"version":3,"sources":["components/Home.js","components/Algorithms.js","components/Sort.js","assets/icon.png","components/Navigation.js","index.js"],"names":["Home","state","displayBio","displayScores","toggleBio","setState","toggleScores","Component","mergeSort","array","anim","l","r","dec","mid","Math","floor","lft","rit","i","push","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","x","y","leftAnim","length","rightAnim","bubbleSort","j","randomInt","min","max","random","Sort","timeouts","btnActive","showModal","arraySize","animDelay","arrayWidth","window","innerWidth","arrayMargin","decreasing","updWidth","hideModal","resetArray","playAnimations","arrayBars","document","getElementsByClassName","a","b","setTimeout","style","backgroundColor","height","timeout","sortingAlgorithms","slice","quickSort","heapSort","stopAlgorithm","clearTimeout","changedSize","event","target","value","changedDecreasing","checked","console","log","changedDelay","this","addEventListener","removeEventListener","Modal","onHide","show","size","aria-labelledby","centered","Body","Footer","Button","onClick","className","map","idx","width","margin","display","variant","disabled","Form","Check","type","label","onChange","Group","controlId","Label","Control","defaultValue","tooltip","Navigation","props","activeKey","Navbar","bg","Brand","href","src","icon","alt","Nav","Link","ReactDOM","render","basename","exact","path","getElementById"],"mappings":"oOAkCeA,E,4MA5BXC,MAAQ,CAAEC,YAAa,EAAOC,eAAgB,G,EAI9CC,UAAY,WACR,EAAKC,SAAS,CAAEH,YAAc,EAAKD,MAAMC,c,EAG7CI,aAAe,WACX,EAAKD,SAAS,CAAEF,eAAiB,EAAKF,MAAME,iB,uDAI5C,OACI,gCACI,uDACA,8GACA,uBACA,sCACA,+IACA,uBACA,uCACA,6F,GAzBGI,a,gCCFZ,SAASC,EAAUC,EAAOC,EAAMC,EAAGC,EAAGC,GAEzC,GAAGF,IAAMC,EAAT,CACA,IAAIE,EAAMC,KAAKC,OAAOL,EAAEC,GAAG,GAE3BJ,EAAUC,EAAOC,EAAMC,EAAGG,EAAKD,GAAML,EAAUC,EAAOC,EAAMI,EAAI,EAAGF,EAAGC,GAItE,IAFA,IAAMI,EAAM,GAAIC,EAAM,GAEbC,EAAIR,EAAGQ,GAAKL,EAAKK,IAAKF,EAAIG,KAAKX,EAAMU,IAC9CF,EAAIG,KAAKP,EAAMQ,OAAOC,iBAAmBD,OAAOE,kBAEhD,IAAK,IAAIJ,EAAIL,EAAM,EAAGK,GAAKP,EAAGO,IAAKD,EAAIE,KAAKX,EAAMU,IAClDD,EAAIE,KAAKP,EAAMQ,OAAOC,iBAAmBD,OAAOE,kBAEhD,IAAK,IAAIJ,EAAIR,EAAGa,EAAE,EAAGC,EAAE,EAAGN,GAAKP,EAAGO,IAClC,CAEI,IAAIO,EAAWF,IAAMP,EAAIU,OAAO,GAAK,EAAIhB,EAAEa,EACvCI,EAAYH,IAAMP,EAAIS,OAAO,GAAK,EAAIb,EAAI,EAAEW,EAChDf,EAAKU,KAAK,CAACM,EAAUE,EAAW,IAE7Bf,EAEKI,EAAIO,IAAMN,EAAIO,IAEdf,EAAKU,KAAK,CAACD,EAAGF,EAAIO,GAAI,IACtBf,EAAMU,GAAKF,EAAIO,OAIfd,EAAKU,KAAK,CAACD,EAAGD,EAAIO,GAAI,IACtBhB,EAAMU,GAAKD,EAAIO,MAKfR,EAAIO,IAAMN,EAAIO,IAEdf,EAAKU,KAAK,CAACD,EAAGF,EAAIO,GAAI,IACtBf,EAAMU,GAAKF,EAAIO,OAIfd,EAAKU,KAAK,CAACD,EAAGD,EAAIO,GAAI,IACtBhB,EAAMU,GAAKD,EAAIO,MAGvBf,EAAKU,KAAK,CAACM,EAAUE,EAAW,MAKjC,SAASC,EAAWpB,EAAOC,EAAMG,GAEpC,IAAI,IAAIM,EAAIV,EAAMkB,OAAO,EAAGR,EAAI,EAAGA,IAE/B,IAAI,IAAIW,EAAI,EAAGA,EAAIX,EAAGW,IACtB,CAGI,GADApB,EAAKU,KAAK,CAACU,EAAGA,EAAE,EAAG,IAChBjB,GAEC,GAAGJ,EAAMqB,GAAKrB,EAAMqB,EAAE,GACtB,CACI,IAAIN,EAAIf,EAAMqB,GAAIrB,EAAMqB,GAAKrB,EAAMqB,EAAE,GAAIrB,EAAMqB,EAAE,GAAKN,EAEtDd,EAAKU,KAAK,CAACU,EAAGA,EAAE,EAAG,UAKvB,GAAGrB,EAAMqB,GAAKrB,EAAMqB,EAAE,GACtB,CACI,IAAIN,EAAIf,EAAMqB,GAAIrB,EAAMqB,GAAKrB,EAAMqB,EAAE,GAAIrB,EAAMqB,EAAE,GAAKN,EAEtDd,EAAKU,KAAK,CAACU,EAAGA,EAAE,EAAG,IAI3BpB,EAAKU,KAAK,CAACU,EAAGA,EAAE,EAAG,KC+H/B,SAASC,EAAUC,EAAKC,GACpB,OAAOlB,KAAKC,MAAMD,KAAKmB,UAAYD,EAAID,EAAI,GAAKA,GAQrCG,M,4MAnNXC,SAAW,G,EAEXnC,MAAQ,CAAEQ,MAAO,GAAIC,KAAM,GAAI2B,WAAW,EAAMC,WAAW,EAAMC,UAAW,IAAKC,UAAW,EACxFC,YAAaC,OAAOC,WAAW,IAAnB,IAAgCC,aAAcF,OAAOC,WAAW,IAAnB,K,EAE7DE,YAAa,E,EAebC,SAAW,WACP,EAAKzC,SAAS,CAAEoC,YAAaC,OAAOC,WAAW,IAAnB,IAAgCC,aAAcF,OAAOC,WAAW,IAAnB,O,EAG7EI,UAAY,WACR,EAAK1C,SAAS,CAAEiC,WAAW,K,EAI/BU,WAAa,WAET,IADA,IAAMvC,EAAQ,GACNU,EAAI,EAAGA,EAAI,EAAKlB,MAAMsC,UAAWpB,IAErCV,EAAMW,KAAKW,EAAU,IAAK,MAE9B,EAAK1B,SAAS,CAACI,MAAOA,K,EAG1BwC,eAAiB,WAIb,IAHH,IAAD,WAGY9B,GAEJ,IAAM+B,EAAYC,SAASC,uBAAuB,aAL1D,cAM+B,EAAKnD,MAAMS,KAAKS,GAN/C,GAMekC,EANf,KAMkBC,EANlB,KAQQ,OARR,MAUY,KAAK,EACD,EAAKlB,SAAShB,KAAKmC,YAAW,YAChB,IAAPF,IAAUH,EAAUG,GAAGG,MAAMC,gBAAkB,iBACxC,IAAPH,IAAUJ,EAAUI,GAAGE,MAAMC,gBAAkB,kBACnDtC,EAAE,EAAKlB,MAAMuC,YACpB,MACA,KAAK,EACD,EAAKJ,SAAShB,KAAKmC,YAAW,YAChB,IAAPF,IAAUH,EAAUG,GAAGG,MAAMC,gBAAkB,YACxC,IAAPH,IAAUJ,EAAUI,GAAGE,MAAMC,gBAAkB,aACnDtC,EAAE,EAAKlB,MAAMuC,YACpB,MACA,KAAK,EACD,EAAKJ,SAAShB,KAAKmC,YAAW,WAC1B,EAAKtD,MAAMQ,MAAM4C,GAAKC,EACtBJ,EAAUG,GAAGG,MAAME,OAAnB,UAA+BJ,EAAE,GAAjC,QACDnC,EAAE,EAAKlB,MAAMuC,YACpB,MACA,KAAK,EACD,EAAKJ,SAAShB,KAAKmC,YAAW,WAC1B,IAAI/B,EAAI,EAAKvB,MAAMQ,MAAM4C,GAAI,EAAKpD,MAAMQ,MAAM4C,GAAK,EAAKpD,MAAMQ,MAAM6C,GAAI,EAAKrD,MAAMQ,MAAM6C,GAAK9B,EAC9F0B,EAAUG,GAAGG,MAAME,OAAnB,UAA+B,EAAKzD,MAAMQ,MAAM4C,GAAG,GAAnD,MACAH,EAAUI,GAAGE,MAAME,OAAnB,UAA+B,EAAKzD,MAAMQ,MAAM6C,GAAG,GAAnD,QACDnC,EAAE,EAAKlB,MAAMuC,cA9BpBrB,EAAI,EAAGA,EAAI,EAAKlB,MAAMS,KAAKiB,OAAQR,IAC1C,EADOA,GAuCR,EAAKiB,SAAShB,KAAK,EAAKuC,QAAUJ,YAAW,WACzC,EAAKlD,SAAS,CAACgC,WAAW,MAC3B,EAAKpC,MAAMS,KAAKiB,OAAO,EAAK1B,MAAMuC,a,EAIzCX,WAAa,WACT,EAAKxB,SAAS,CAACK,KAAM,GAAI2B,WAAW,IACpCuB,EAA6B,EAAK3D,MAAMQ,MAAMoD,QAAS,EAAK5D,MAAMS,KAAM,EAAKmC,YAC7E,EAAKI,kB,EAGTzC,UAAY,WACR,EAAKH,SAAS,CAACK,KAAM,GAAI2B,WAAW,IACpCuB,EAA4B,EAAK3D,MAAMQ,MAAMoD,QAAS,EAAK5D,MAAMS,KAAM,EAAG,EAAKT,MAAMQ,MAAMkB,OAAO,EAAG,EAAKkB,YAC1G,EAAKI,kB,EAGTa,UAAY,a,EAIZC,SAAW,a,EAIXC,cAAgB,WAEZ,IADA,IAAMd,EAAYC,SAASC,uBAAuB,aAC1CjC,EAAI,EAAGA,EAAI+B,EAAUvB,OAAQR,IAAK+B,EAAU/B,GAAGqC,MAAMC,gBAAkB,eAC/E,IAAQtC,EAAI,EAAGA,EAAI,EAAKiB,SAAST,OAAQR,IAErC8C,aAAa,EAAK7B,SAASjB,IAE/B,EAAKd,SAAS,CAACgC,WAAW,K,EAI9B6B,YAAc,SAACC,GACX,EAAK9D,SAAS,CAACkC,UAAW4B,EAAMC,OAAOC,S,EAG3CC,kBAAoB,SAACH,GACjB,EAAKtB,WAAasB,EAAMC,OAAOG,QAC/BC,QAAQC,IAAI,EAAK5B,a,EAIrB6B,aAAe,SAACP,GACZ,EAAK9D,SAAS,CAACmC,UAAW2B,EAAMC,OAAOC,S,kEAzHvCM,KAAK3B,aACLN,OAAOkC,iBAAiB,SAAUD,KAAK7B,Y,6CAIvC,IAAI,IAAI3B,EAAI,EAAGA,EAAIwD,KAAKvC,SAAST,OAAQR,IAErC8C,aAAaU,KAAKvC,SAASjB,IAE/BuB,OAAOmC,oBAAoB,SAAUF,KAAK7B,Y,+BAmHpC,IAAD,OACGrC,EAAUkE,KAAK1E,MAAfQ,MACR,OACI,gCACI,eAACqE,EAAA,EAAD,CAAOC,OAAQJ,KAAK5B,UAAWiC,KAAML,KAAK1E,MAAMqC,UAC5C2C,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EAHZ,UAII,eAACL,EAAA,EAAMM,KAAP,WACA,oDACA,yHACA,uBACA,6CACA,6KAEA,uBACA,4CACA,mHACA,uBACA,2CACA,uLAEA,uBACA,4CACA,2HAEA,cAACN,EAAA,EAAMO,OAAP,UACA,cAACC,EAAA,EAAD,CAAQC,QAASZ,KAAK5B,UAAtB,wBAGJ,qBAAKyC,UAAU,iBAAiBhC,MAAO,CAAEE,OAAO,GAAD,OAAK,GAAL,SAC9CjD,EAAMgF,KAAI,SAACpB,EAAOqB,GAAR,OACP,qBAAKF,UAAU,YAAsBhC,MAAO,CAAEE,OAAO,GAAD,OAAKW,EAAM,GAAX,MAAmBsB,MAAO,EAAK1F,MAAMwC,WACzFmD,OAAO,OAAD,OAAS,EAAK3F,MAAM2C,YAApB,QAD0B8C,MAGpC,qBAAKF,UAAU,iBAAiBhC,MAAO,CAAEE,OAAO,GAAD,OAAK,GAAL,SAC/C,uBACA,sBAAKF,MAAO,CAACqC,QAAS,gBAAtB,UACI,cAACP,EAAA,EAAD,CAAQQ,QAAQ,UAAUC,UAAWpB,KAAK1E,MAAMoC,UAAWkD,QAASZ,KAAK3B,WAAzE,uBACA,cAACsC,EAAA,EAAD,CAAQQ,QAAQ,UAAUC,UAAWpB,KAAK1E,MAAMoC,UAAWkD,QAASZ,KAAK9C,WAAzE,yBACA,cAACyD,EAAA,EAAD,CAAQQ,QAAQ,OAAOC,UAAWpB,KAAK1E,MAAMoC,UAAWkD,QAASZ,KAAKnE,UAAtE,wBACA,cAAC8E,EAAA,EAAD,CAAQQ,QAAQ,YAAYC,UAAWpB,KAAK1E,MAAMoC,UAAWkD,QAASZ,KAAKb,UAA3E,wBACA,cAACwB,EAAA,EAAD,CAAQQ,QAAQ,OAAOC,UAAWpB,KAAK1E,MAAMoC,UAAWkD,QAASZ,KAAKZ,SAAtE,uBACA,cAACuB,EAAA,EAAD,CAAQQ,QAAQ,SAASC,SAAUpB,KAAK1E,MAAMoC,UAAWkD,QAASZ,KAAKX,cAAvE,4BAEA,eAACgC,EAAA,EAAD,WACA,cAACA,EAAA,EAAKC,MAAN,CACIC,KAAK,WACLC,MAAM,2BACNC,SAAUzB,KAAKL,kBACfyB,UAAWpB,KAAK1E,MAAMoC,UACtBmB,MAAO,CAACoC,OAAQ,KAGpB,eAACI,EAAA,EAAKK,MAAN,CAAYC,UAAU,iBAAtB,UACI,eAACN,EAAA,EAAKO,MAAN,0BAAyB5B,KAAK1E,MAAMsC,aACpC,cAACyD,EAAA,EAAKQ,QAAN,CAAcT,UAAWpB,KAAK1E,MAAMoC,UAAW6D,KAAK,QAAQO,aAAc9B,KAAK1E,MAAMsC,UACrFP,IAAI,KAAKC,IAAI,MAAMyE,QAAQ,OAAON,SAAY,SAACjC,GAAD,OAAW,EAAKD,YAAYC,MAC1E,eAAC6B,EAAA,EAAKO,MAAN,+BAA8B5B,KAAK1E,MAAMuC,UAAzC,SACA,cAACwD,EAAA,EAAKQ,QAAN,CAAcT,UAAWpB,KAAK1E,MAAMoC,UAAW6D,KAAK,QAAQO,aAAc9B,KAAK1E,MAAMuC,UACrFR,IAAI,IAAIC,IAAI,MAAMyE,QAAQ,OAAON,SAAY,SAACjC,GAAD,OAAW,EAAKO,aAAaP,sB,GAlM/E5D,a,gBCJJ,MAA0B,iCCwB1BoG,EApBI,SAAAC,GAAS,IAEhBrG,EAAyBqG,EAAzBrG,UAAWsG,EAAcD,EAAdC,UAEnB,OACI,gCACI,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOjB,QAAQ,OAA1B,UACI,cAACgB,EAAA,EAAOE,MAAR,CAAcC,KAAK,KAAnB,SACI,qBAAKC,IAAKC,EAAMC,IAAI,OAAO5B,UAAU,WAEzC,eAAC6B,EAAA,EAAD,CAAKR,UAAWA,EAAWrB,UAAU,UAArC,UACI,cAAC6B,EAAA,EAAIC,KAAL,CAAUL,KAAK,KAAf,kBACA,cAACI,EAAA,EAAIC,KAAL,CAAUL,KAAK,SAAf,wBAGR,cAAC1G,EAAD,Q,qBCVZgH,IAASC,OACL,eAAC,IAAD,CAAYC,SAAS,IAArB,UACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIH,OAAQ,kBAAM,cAAC,EAAD,CAAYjH,UAAWP,EAAM6G,UAAU,UAC3E,cAAC,IAAD,CAAOc,KAAK,QAAQH,OAAQ,kBAAM,cAAC,EAAD,CAAYjH,UAAW4B,EAAM0E,UAAU,iBAE7E1D,SAASyE,eAAe,W","file":"static/js/main.9f8340cb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n//this is where everything should be to get rendered in index.html\r\nclass Home extends Component {\r\n\r\n    //update state on initialization\r\n    state = { displayBio : false, displayScores : false };\r\n\r\n    //use setState to change state, don't directly modify state\r\n    //it calls render() again at the end of setState\r\n    toggleBio = () => {\r\n        this.setState({ displayBio : !this.state.displayBio });\r\n    }\r\n\r\n    toggleScores = () => {\r\n        this.setState({ displayScores : !this.state.displayScores });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Algorithms Visualizer</h2>\r\n                <p>This is a project I made to visualize various algorithms in computer science.</p>\r\n                <hr/>\r\n                <h4>Sort</h4>\r\n                <p>Simulates various sorting algorithms on an array. Includes merge sort, heap sort, bubble sort, and quick sort.</p>\r\n                <hr/>\r\n                <h4>Graph</h4>\r\n                <p>Simulates graph theory algorithms on a grid of nodes.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","//merge sort function\r\nexport function mergeSort(array, anim, l, r, dec) {\r\n    //base case: the segment is length 1\r\n    if(l === r) return;\r\n    var mid = Math.floor((l+r)/2);\r\n    //otherwise, sort the left and right segments\r\n    mergeSort(array, anim, l, mid, dec); mergeSort(array, anim, mid+1, r, dec);\r\n    //combine sorted segments\r\n    const lft = [], rit = []; \r\n    \r\n    for (let i = l; i <= mid; i++) lft.push(array[i]); \r\n    lft.push(dec ? Number.MIN_SAFE_INTEGER : Number.MAX_SAFE_INTEGER);\r\n\r\n    for (let i = mid + 1; i <= r; i++) rit.push(array[i]); \r\n    rit.push(dec ? Number.MIN_SAFE_INTEGER : Number.MAX_SAFE_INTEGER);\r\n\r\n    for (let i = l, x=0, y=0; i <= r; i++)\r\n    {\r\n        //push animations for updating the left and right bar colour, if they exist\r\n        var leftAnim = x === lft.length-1 ? -1 : l+x;\r\n        var rightAnim = y === rit.length-1 ? -1 : mid+1+y;\r\n        anim.push([leftAnim, rightAnim, 1]); \r\n        //update the pointer element's height\r\n        if(dec)\r\n        {\r\n            if (lft[x] >= rit[y]) \r\n            {\r\n                anim.push([i, lft[x], 2]);\r\n                array[i] = lft[x++];\r\n            }\r\n            else \r\n            {\r\n                anim.push([i, rit[y], 2]);\r\n                array[i] = rit[y++];\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (lft[x] <= rit[y]) \r\n            {\r\n                anim.push([i, lft[x], 2]);\r\n                array[i] = lft[x++];\r\n            }\r\n            else \r\n            {\r\n                anim.push([i, rit[y], 2]);\r\n                array[i] = rit[y++];\r\n            }\r\n        }\r\n        anim.push([leftAnim, rightAnim, 0]);\r\n    }\r\n}\r\n\r\n//bubble sort function\r\nexport function bubbleSort(array, anim, dec) {\r\n    //moves the largest element to the top during each sweep of the algorithm\r\n    for(var i = array.length-1; i > 0; i--)\r\n    {\r\n        for(var j = 0; j < i; j++)\r\n        {\r\n            //updates colour of this element and the one next to it\r\n            anim.push([j, j+1, 1]);\r\n            if(dec)\r\n            {\r\n                if(array[j] < array[j+1])\r\n                {\r\n                    let x = array[j]; array[j] = array[j+1]; array[j+1] = x;\r\n                    //swap two values\r\n                    anim.push([j, j+1, 3]);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(array[j] > array[j+1])\r\n                {\r\n                    let x = array[j]; array[j] = array[j+1]; array[j+1] = x;\r\n                    //swap two values\r\n                    anim.push([j, j+1, 3]);\r\n                }\r\n            }\r\n            //reset the colours\r\n            anim.push([j, j+1, 0]);\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport {Button, Modal, Form} from \"react-bootstrap\";\r\nimport * as sortingAlgorithms from \"./Algorithms\";\r\n\r\nclass Sort extends Component {\r\n\r\n    timeouts = [];\r\n\r\n    state = { array: [], anim: [], btnActive: true, showModal: true, arraySize: 180, animDelay: 3, \r\n        arrayWidth: (window.innerWidth-80)/(180*2), arrayMargin: (window.innerWidth-80)/(180*4) }\r\n    \r\n    decreasing = false;\r\n\r\n    componentDidMount() {\r\n        this.resetArray(); \r\n        window.addEventListener('resize', this.updWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        for(var i = 0; i < this.timeouts.length; i++)\r\n        {\r\n            clearTimeout(this.timeouts[i]);\r\n        }\r\n        window.removeEventListener('resize', this.updWidth);\r\n    }\r\n\r\n    updWidth = () => {\r\n        this.setState({ arrayWidth: (window.innerWidth-80)/(180*2), arrayMargin: (window.innerWidth-80)/(180*4) });\r\n    }\r\n\r\n    hideModal = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    //initialize array to random values\r\n    resetArray = () => {\r\n        const array = [];\r\n        for(let i = 0; i < this.state.arraySize; i++)\r\n        {\r\n            array.push(randomInt(100, 500));\r\n        }\r\n        this.setState({array: array});\r\n    }\r\n\r\n    playAnimations = () => \r\n    {\r\n        //these algorithms do the sorting on a copy of the official array, then push all of the modification data to the animation array\r\n        //the animation array is read here and changes are made to the original array\r\n        for(let i = 0; i < this.state.anim.length; i++)\r\n        {\r\n            const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n            const [a, b, action] = this.state.anim[i];\r\n            //action: 0 = set bars to blue, 1 = set bars to red, 2 = update a single value, 3 = swap two values\r\n            switch(action)\r\n            {\r\n                case 0:\r\n                    this.timeouts.push(setTimeout(() => {\r\n                        if(a !== -1) arrayBars[a].style.backgroundColor = \"lightskyblue\"; \r\n                        if(b !== -1) arrayBars[b].style.backgroundColor = \"lightskyblue\"; \r\n                    }, i*this.state.animDelay));\r\n                break;\r\n                case 1:\r\n                    this.timeouts.push(setTimeout(() => {\r\n                        if(a !== -1) arrayBars[a].style.backgroundColor = \"crimson\"; \r\n                        if(b !== -1) arrayBars[b].style.backgroundColor = \"crimson\"; \r\n                    }, i*this.state.animDelay));\r\n                break;\r\n                case 2:\r\n                    this.timeouts.push(setTimeout(() => {\r\n                        this.state.array[a] = b;\r\n                        arrayBars[a].style.height = `${b/10}vh`;\r\n                    }, i*this.state.animDelay));\r\n                break;\r\n                case 3:\r\n                    this.timeouts.push(setTimeout(() => {\r\n                        var x = this.state.array[a]; this.state.array[a] = this.state.array[b]; this.state.array[b] = x;\r\n                        arrayBars[a].style.height = `${this.state.array[a]/10}vh`;\r\n                        arrayBars[b].style.height = `${this.state.array[b]/10}vh`;\r\n                    }, i*this.state.animDelay));\r\n                break;\r\n                case 4:\r\n\r\n                break;\r\n                default:\r\n                break;\r\n            }\r\n        }\r\n        this.timeouts.push(this.timeout = setTimeout(() => {\r\n            this.setState({btnActive: true});\r\n        }, this.state.anim.length*this.state.animDelay));\r\n        \r\n    }\r\n\r\n    bubbleSort = () => {\r\n        this.setState({anim: [], btnActive: false});\r\n        sortingAlgorithms.bubbleSort(this.state.array.slice(), this.state.anim, this.decreasing);\r\n        this.playAnimations();\r\n    }\r\n\r\n    mergeSort = () => {\r\n        this.setState({anim: [], btnActive: false});\r\n        sortingAlgorithms.mergeSort(this.state.array.slice(), this.state.anim, 0, this.state.array.length-1, this.decreasing);\r\n        this.playAnimations();\r\n    }   \r\n\r\n    quickSort = () => {\r\n        \r\n    }\r\n\r\n    heapSort = () => {\r\n        \r\n    }\r\n\r\n    stopAlgorithm = () => {\r\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n        for(var i = 0; i < arrayBars.length; i++) arrayBars[i].style.backgroundColor = \"lightskyblue\"; \r\n        for(var i = 0; i < this.timeouts.length; i++)\r\n        {\r\n            clearTimeout(this.timeouts[i]);\r\n        }\r\n        this.setState({btnActive: true});\r\n    }\r\n\r\n    //event for changing the size of the array\r\n    changedSize = (event) => {\r\n        this.setState({arraySize: event.target.value});\r\n    }\r\n\r\n    changedDecreasing = (event) => {\r\n        this.decreasing = event.target.checked;\r\n        console.log(this.decreasing);\r\n    }\r\n\r\n    //event for changing the animation delay\r\n    changedDelay = (event) => {\r\n        this.setState({animDelay: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        const { array } = this.state;\r\n        return (\r\n            <div>\r\n                <Modal onHide={this.hideModal} show={this.state.showModal}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered>\r\n                    <Modal.Body>\r\n                    <h4>Sorting Visualizer</h4>\r\n                    <p>This app visualizes sorting algorithms on an array. Here are the algorithms it supports:</p>\r\n                    <hr/>\r\n                    <h5>Bubble Sort</h5>\r\n                    <p>A simple sorting algorithm that repeatedly steps through the list, compares adjacent elements \r\n                        and swaps them if they are in the wrong order.</p>\r\n                    <hr/>\r\n                    <h5>Merge Sort</h5>\r\n                    <p>A divide and conquer sorting algorithm that merges two sorted arrays in O(n) time.</p>\r\n                    <hr/>\r\n                    <h5>Heap Sort</h5>\r\n                    <p>A comparison-based sorting algorithm that reduces unsorted regions by extracting the largest element from it and \r\n                        inserting it into the sorted regions.</p>\r\n                    <hr/>\r\n                    <h5>Quick Sort</h5>\r\n                    <p>A divide and conquer sorting algorithm that uses a pivot to sort subarrays recursively.</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button onClick={this.hideModal}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <div className=\"array-bar-fake\" style={{ height: `${500/10}vh` }}></div>\r\n                {array.map((value, idx) => (\r\n                    <div className=\"array-bar\" key={idx} style={{ height: `${value/10}vh`, width: this.state.arrayWidth, \r\n                    margin: `0px ${this.state.arrayMargin}px` }}></div>\r\n                ))}\r\n                <div className=\"array-bar-fake\" style={{ height: `${500/10}vh`  }}></div>\r\n                <hr/>\r\n                <div style={{display: \"inline-block\"}}>\r\n                    <Button variant=\"success\" disabled={!this.state.btnActive} onClick={this.resetArray}>New Array</Button>\r\n                    <Button variant=\"primary\" disabled={!this.state.btnActive} onClick={this.bubbleSort}>Bubble Sort</Button>\r\n                    <Button variant=\"info\" disabled={!this.state.btnActive} onClick={this.mergeSort}>Merge Sort</Button>\r\n                    <Button variant=\"secondary\" disabled={!this.state.btnActive} onClick={this.quickSort}>Quick Sort</Button>\r\n                    <Button variant=\"dark\" disabled={!this.state.btnActive} onClick={this.heapSort}>Heap Sort</Button>\r\n                    <Button variant=\"danger\" disabled={this.state.btnActive} onClick={this.stopAlgorithm}>Stop Algorithm</Button>\r\n\r\n                    <Form>\r\n                    <Form.Check \r\n                        type=\"checkbox\" \r\n                        label=\"Sort in decreasing order\"\r\n                        onChange={this.changedDecreasing}\r\n                        disabled={!this.state.btnActive}\r\n                        style={{margin: 5}}\r\n                    />\r\n\r\n                    <Form.Group controlId=\"formBasicRange\">\r\n                        <Form.Label>Array Size: {this.state.arraySize}</Form.Label>\r\n                        <Form.Control disabled={!this.state.btnActive} type=\"range\" defaultValue={this.state.arraySize} \r\n                        min=\"10\" max=\"180\" tooltip=\"auto\" onChange = {(event) => this.changedSize(event)}/>\r\n                        <Form.Label>Animation Delay: {this.state.animDelay} ms</Form.Label>\r\n                        <Form.Control disabled={!this.state.btnActive} type=\"range\" defaultValue={this.state.animDelay} \r\n                        min=\"1\" max=\"200\" tooltip=\"auto\" onChange = {(event) => this.changedDelay(event)}/>\r\n                    </Form.Group>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//random int in the range [min, max]\r\nfunction randomInt(min, max) {\r\n    return Math.floor(Math.random() * (max-min+1) + min);\r\n}\r\n\r\n//round down a number to the nearest 0.001\r\nfunction roundDown(x) {\r\n    return Math.floor(1000*x)/1000;\r\n}\r\n\r\nexport default Sort;","export default __webpack_public_path__ + \"static/media/icon.df8e9b2c.png\";","import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport icon from \"../assets/icon.png\";\r\n\r\nconst Navigation = props => {\r\n    //component is passed down thru props and navigation will now apply the navbar on top of the component\r\n    const { Component, activeKey } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#/\">\r\n                    <img src={icon} alt=\"Icon\" className=\"icon\"/>\r\n                </Navbar.Brand>\r\n                <Nav activeKey={activeKey} className=\"mr-auto\">\r\n                    <Nav.Link href=\"#/\">Home</Nav.Link>\r\n                    <Nav.Link href=\"#/sort\">Sort</Nav.Link>\r\n                </Nav>\r\n            </Navbar>\r\n            <Component/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Home from \"./components/Home\";\nimport Sort from \"./components/Sort\";\nimport Navigation from \"./components/Navigation\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport \"./index.css\";\n\n//render everything in App as html code in the body of index.html\nReactDOM.render(\n    <HashRouter basename=\"/\">\n        <Route exact path=\"/\" render={() => <Navigation Component={Home} activeKey=\"#/\"/>}/>\n        <Route path=\"/sort\" render={() => <Navigation Component={Sort} activeKey=\"#/sort\"/>}/>\n    </HashRouter>, \n    document.getElementById(\"root\")\n);"],"sourceRoot":""}