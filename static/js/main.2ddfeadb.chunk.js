(this["webpackJsonpalgorithms-visualizer"]=this["webpackJsonpalgorithms-visualizer"]||[]).push([[0],{55:function(t,e,r){},59:function(t,e,r){"use strict";r.r(e);var a=r(2),i=r(0),s=r(20),n=r.n(s),c=r(25),o=r(26),h=r(32),l=r(30),j=function(t){Object(h.a)(r,t);var e=Object(l.a)(r);function r(){var t;Object(c.a)(this,r);for(var a=arguments.length,i=new Array(a),s=0;s<a;s++)i[s]=arguments[s];return(t=e.call.apply(e,[this].concat(i))).state={displayBio:!1,displayScores:!1},t.toggleBio=function(){t.setState({displayBio:!t.state.displayBio})},t.toggleScores=function(){t.setState({displayScores:!t.state.displayScores})},t}return Object(o.a)(r,[{key:"render",value:function(){return Object(a.jsxs)("div",{children:[Object(a.jsx)("h2",{children:"Algorithms Visualizer"}),Object(a.jsx)("p",{children:"This is a project I made to visualize various algorithms in computer science."}),Object(a.jsx)("hr",{}),Object(a.jsx)("h4",{children:"Sort"}),Object(a.jsx)("p",{children:"Simulates various sorting algorithms on an array. Includes merge sort, heap sort, bubble sort, and quick sort."}),Object(a.jsx)("hr",{}),Object(a.jsx)("h4",{children:"Graph"}),Object(a.jsx)("p",{children:"Simulates graph theory algorithms on a grid of nodes."})]})}}]),r}(i.Component),d=r(44),u=r(62),b=r(61);function m(t,e,r,a){if(r!=a){var i=Math.floor((r+a)/2);m(t,e,r,i),m(t,e,i+1,a);for(var s=[],n=[],c=r;c<=i;c++)s.push(t[c]);s.push(Number.MAX_SAFE_INTEGER);for(var o=i+1;o<=a;o++)n.push(t[o]);n.push(Number.MAX_SAFE_INTEGER);for(var h=r,l=0,j=0;h<=a;h++){var d=l==s.length-1?-1:r+l,u=j==n.length-1?-1:i+1+j;e.push([d,u,1]),s[l]<=n[j]?(e.push([h,s[l],2]),t[h]=s[l++]):(e.push([h,n[j],2]),t[h]=n[j++]),e.push([d,u,0])}}}function p(t,e){return Math.floor(Math.random()*(e-t+1)+t)}var g=function(t){Object(h.a)(r,t);var e=Object(l.a)(r);function r(){var t;Object(c.a)(this,r);for(var a=arguments.length,i=new Array(a),s=0;s<a;s++)i[s]=arguments[s];return(t=e.call.apply(e,[this].concat(i))).state={array:[],anim:[],btnActive:!0,showModal:!0},t.animDelay=8,t.hideModal=function(){t.setState({showModal:!1})},t.resetArray=function(){for(var e=window.innerWidth-150,r=Math.max(e/10,10),a=[],i=0;i<r;i++)a.push(p(100,600));t.setState({array:a})},t.bubbleSort=function(){},t.mergeSort=function(){t.setState({anim:[],btnActive:!1}),m(t.state.array.slice(),t.state.anim,0,t.state.array.length-1),console.log(t.state.array),console.log(t.state.anim);for(var e=[],r=0;r<t.state.array.length;r++)e.push(0);for(var a=function(r){var a=document.getElementsByClassName("array-bar"),i=Object(d.a)(t.state.anim[r],3),s=i[0],n=i[1],c=i[2];if(2!==c){var o=1===c?"crimson":"lightskyblue";setTimeout((function(){-1!==s&&(a[s].style.backgroundColor=o),-1!==n&&(a[n].style.backgroundColor=o)}),r*t.animDelay)}else setTimeout((function(){e[s]=n,a[s].style.height="".concat(n/15,"vh")}),r*t.animDelay)},i=0;i<t.state.anim.length;i++)a(i);t.timeout=setTimeout((function(){t.setState({btnActive:!0,array:e})}),t.state.anim.length*t.animDelay)},t.quickSort=function(){},t.heapSort=function(){},t.changeArraySize=function(){},t}return Object(o.a)(r,[{key:"componentDidMount",value:function(){this.resetArray()}},{key:"componentWillUnmount",value:function(){clearTimeout(this.timeout)}},{key:"render",value:function(){var t=this.state.array;return Object(a.jsxs)("div",{children:[Object(a.jsxs)(u.a,{show:this.state.showModal,size:"lg","aria-labelledby":"contained-modal-title-vcenter",centered:!0,children:[Object(a.jsxs)(u.a.Body,{children:[Object(a.jsx)("h4",{children:"Sorting Visualizer"}),Object(a.jsx)("p",{children:"This app visualizes sorting algorithms on an array. Here are the algorithms it supports:"}),Object(a.jsx)("hr",{}),Object(a.jsx)("h5",{children:"Bubble Sort"}),Object(a.jsx)("p",{children:"A simple sorting algorithm that repeatedly steps through the list, compares adjacent elements and swaps them if they are in the wrong order."}),Object(a.jsx)("hr",{}),Object(a.jsx)("h5",{children:"Merge Sort"}),Object(a.jsx)("p",{children:"A divide and conquer sorting algorithm that merges two sorted arrays in O(n) time."}),Object(a.jsx)("hr",{}),Object(a.jsx)("h5",{children:"Heap Sort"}),Object(a.jsx)("p",{children:"A comparison-based sorting algorithm that reduces unsorted regions by extracting the largest element from it and inserting it into the sorted regions."}),Object(a.jsx)("hr",{}),Object(a.jsx)("h5",{children:"Quick Sort"}),Object(a.jsx)("p",{children:"A divide and conquer sorting algorithm that uses a pivot to sorts subarrays recursively."})]}),Object(a.jsx)(u.a.Footer,{children:Object(a.jsx)(b.a,{onClick:this.hideModal,children:"Close"})})]}),Object(a.jsx)("div",{className:"array-bar-fake",style:{height:"".concat(650/15,"vh")}}),t.map((function(t,e){return Object(a.jsx)("div",{className:"array-bar",style:{height:"".concat(t/15,"vh")}},e)})),Object(a.jsx)("div",{className:"array-bar-fake",style:{height:"".concat(650/15,"vh")}}),Object(a.jsx)("hr",{}),Object(a.jsx)(b.a,{variant:"success",disabled:!this.state.btnActive,onClick:this.resetArray,children:"New Array"}),Object(a.jsx)(b.a,{variant:"primary",disabled:!this.state.btnActive,onClick:this.bubbleSort,children:"Bubble Sort"}),Object(a.jsx)(b.a,{variant:"info",disabled:!this.state.btnActive,onClick:this.mergeSort,children:"Merge Sort"}),Object(a.jsx)(b.a,{variant:"secondary",disabled:!this.state.btnActive,onClick:this.quickSort,children:"Quick Sort"}),Object(a.jsx)(b.a,{variant:"dark",disabled:!this.state.btnActive,onClick:this.heapSort,children:"Heap Sort"})]})}}]),r}(i.Component),v=r(64),y=r(63),O=r.p+"static/media/profile.aec772f7.png",f=function(t){var e=t.Component,r=t.activeKey;return Object(a.jsxs)("div",{children:[Object(a.jsxs)(v.a,{bg:"dark",variant:"dark",children:[Object(a.jsx)(v.a.Brand,{href:"#/",children:Object(a.jsx)("img",{src:O,style:{height:35,minHeight:35,maxHeight:35,marginBottom:0},alt:"Profile",className:"profile"})}),Object(a.jsxs)(y.a,{activeKey:r,className:"mr-auto",children:[Object(a.jsx)(y.a.Link,{href:"#/",children:"Home"}),Object(a.jsx)(y.a.Link,{href:"#/sort",children:"Sort"})]})]}),Object(a.jsx)(e,{})]})},x=r(42),S=r(7);r(55);n.a.render(Object(a.jsxs)(x.a,{basename:"/",children:[Object(a.jsx)(S.a,{exact:!0,path:"/",render:function(){return Object(a.jsx)(f,{Component:j,activeKey:"#/"})}}),Object(a.jsx)(S.a,{path:"/sort",render:function(){return Object(a.jsx)(f,{Component:g,activeKey:"#/sort"})}})]}),document.getElementById("root"))}},[[59,1,2]]]);
//# sourceMappingURL=main.2ddfeadb.chunk.js.map