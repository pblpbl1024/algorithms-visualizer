{"version":3,"sources":["components/Home.js","components/MergeSort.js","components/Sort.js","assets/profile.png","components/Navigation.js","index.js"],"names":["Home","state","displayBio","displayScores","toggleBio","setState","toggleScores","Component","mergeSort","array","anim","l","r","mid","Math","floor","lft","rit","i","push","Number","MAX_SAFE_INTEGER","x","y","leftAnim","length","rightAnim","randomInt","min","max","random","Sort","btnActive","showModal","animSpeed","hideModal","resetArray","width","window","innerWidth","n","bubbleSort","sortingAlgorithms","slice","console","log","temp","arrayBars","document","getElementsByClassName","a","b","action","color","setTimeout","style","backgroundColor","height","timeout","quickSort","heapSort","changeArraySize","this","clearTimeout","Modal","show","size","aria-labelledby","centered","Body","Footer","Button","onClick","className","map","value","idx","variant","disabled","Navigation","props","activeKey","Navbar","bg","Brand","href","src","profile","minHeight","maxHeight","marginBottom","alt","Nav","Link","ReactDOM","render","basename","exact","path","getElementById"],"mappings":"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","file":"static/js/main.cde1d539.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n//this is where everything should be to get rendered in index.html\r\nclass Home extends Component {\r\n\r\n    //update state on initialization\r\n    state = { displayBio : false, displayScores : false };\r\n\r\n    //use setState to change state, don't directly modify state\r\n    //it calls render() again at the end of setState\r\n    toggleBio = () => {\r\n        this.setState({ displayBio : !this.state.displayBio });\r\n    }\r\n\r\n    toggleScores = () => {\r\n        this.setState({ displayScores : !this.state.displayScores });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Algorithms Visualizer</h2>\r\n                <p>This is a project I made to visualize various algorithms in computer science.</p>\r\n                <hr/>\r\n                <h4>Sort</h4>\r\n                <p>Simulates various sorting algorithms on an array. Includes merge sort, heap sort, bubble sort, and quick sort.</p>\r\n                <hr/>\r\n                <h4>Graph</h4>\r\n                <p>Simulates graph theory algorithms on a grid of nodes.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","//a merge sort algorithm I wrote to demonstrate its capability for the visualizer.\r\nexport function mergeSort(array, anim, l, r) {\r\n    //base case: the segment is length 1\r\n    if(l == r) return;\r\n    var mid = Math.floor((l+r)/2);\r\n    //otherwise, sort the left and right segments\r\n    mergeSort(array, anim, l, mid); mergeSort(array, anim, mid+1, r);\r\n    //combine sorted segments\r\n    const lft = [], rit = []; \r\n    for (let i = l; i <= mid; i++) lft.push(array[i]); lft.push(Number.MAX_SAFE_INTEGER);\r\n    for (let i = mid + 1; i <= r; i++) rit.push(array[i]); rit.push(Number.MAX_SAFE_INTEGER);\r\n    for (let i = l, x=0, y=0; i <= r; i++)\r\n    {\r\n        //push animations for updating the left and right bar colour, if they exist\r\n        var leftAnim = x == lft.length-1 ? -1 : l+x;\r\n        var rightAnim = y == rit.length-1 ? -1 : mid+1+y;\r\n        anim.push([leftAnim, rightAnim, 1]); \r\n        if (lft[x] <= rit[y]) \r\n        {\r\n            anim.push([i, lft[x], 2]);\r\n            array[i] = lft[x++];\r\n        }\r\n        else \r\n        {\r\n            anim.push([i, rit[y], 2]);\r\n            array[i] = rit[y++];\r\n        }\r\n        anim.push([leftAnim, rightAnim, 0]);\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport * as sortingAlgorithms from \"./MergeSort\";\r\n\r\nclass Sort extends Component {\r\n\r\n    state = { array: [], anim: [], btnActive: true, showModal: true }\r\n    animSpeed = 10;\r\n\r\n    componentDidMount() {\r\n        this.resetArray(); \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n\r\n    hideModal = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    //initialize array to random values\r\n    resetArray = () => {\r\n        const width = window.innerWidth - 150;\r\n        const n = Math.max(width/10, 10);\r\n        const array = [];\r\n        for(let i = 0; i < n; i++)\r\n        {\r\n            array.push(randomInt(100, 600));\r\n        }\r\n        this.setState({array: array});\r\n    }\r\n\r\n    bubbleSort = () => {\r\n        \r\n    }\r\n\r\n    mergeSort = () => {\r\n        this.setState({anim: [], btnActive: false});\r\n        sortingAlgorithms.mergeSort(this.state.array.slice(), this.state.anim, 0, this.state.array.length-1);\r\n        console.log(this.state.array);\r\n        console.log(this.state.anim);\r\n        const temp = []; for(let i = 0; i < this.state.array.length; i++) temp.push(0);\r\n        for(let i = 0; i < this.state.anim.length; i++)\r\n        {\r\n            const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n            const [a, b, action] = this.state.anim[i];\r\n            if(action !== 2)\r\n            {\r\n                const color = action === 1 ? \"crimson\" : \"lightskyblue\";\r\n                setTimeout(() => {\r\n                    if(a !== -1) arrayBars[a].style.backgroundColor = color; \r\n                    if(b !== -1) arrayBars[b].style.backgroundColor = color; \r\n                }, i*this.animSpeed);\r\n            }\r\n            else\r\n            {\r\n                setTimeout(() => {\r\n                    temp[a] = b;\r\n                    arrayBars[a].style.height = `${b/15}vh`;\r\n                }, i*this.animSpeed);\r\n            }\r\n        }\r\n        this.timeout = setTimeout(() => {\r\n            this.setState({btnActive: true, array: temp});\r\n        }, this.state.anim.length*this.animSpeed);\r\n    }   \r\n\r\n    quickSort = () => {\r\n        \r\n    }\r\n\r\n    heapSort = () => {\r\n        \r\n    }\r\n\r\n    changeArraySize = () => {\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { array } = this.state;\r\n        return (\r\n            <div>\r\n                <Modal show={this.state.showModal}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Body>\r\n                    <h4>Sorting Visualizer</h4>\r\n                    <p>This app visualizes sorting algorithms on an array. Here are the algorithms it supports:</p>\r\n                    <hr/>\r\n                    <h5>Bubble Sort</h5>\r\n                    <p>A simple sorting algorithm that repeatedly steps through the list, compares adjacent elements \r\n                        and swaps them if they are in the wrong order.</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button onClick={this.hideModal}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <div className=\"array-container\">\r\n                {array.map((value, idx) => (\r\n                    <div className=\"array-bar\" key={idx} style={{ height: `${value/15}vh` }}></div>\r\n                ))}\r\n                </div>\r\n                <hr/>\r\n                <Button variant=\"success\" disabled={!this.state.btnActive} onClick={this.resetArray}>New Array</Button>\r\n                <Button variant=\"primary\" disabled={!this.state.btnActive} onClick={this.bubbleSort}>Bubble Sort</Button>\r\n                <Button variant=\"info\" disabled={!this.state.btnActive} onClick={this.mergeSort}>Merge Sort</Button>\r\n                <Button variant=\"secondary\" disabled={!this.state.btnActive} onClick={this.quickSort}>Quick Sort</Button>\r\n                <Button variant=\"dark\" disabled={!this.state.btnActive} onClick={this.heapSort}>Heap Sort</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//random int in the range [min, max]\r\nfunction randomInt(min, max) {\r\n    return Math.floor(Math.random() * (max-min+1) + min);\r\n}\r\n\r\nexport default Sort;","export default __webpack_public_path__ + \"static/media/profile.aec772f7.png\";","import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport profile from \"../assets/profile.png\";\r\n\r\nconst Navigation = props => {\r\n    //component is passed down thru props and navigation will now apply the navbar on top of the component\r\n    const { Component, activeKey } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#/\">\r\n                    <img src={profile} style={{ height: 35, minHeight: 35, maxHeight: 35,  marginBottom: 0 }} alt=\"Profile\" className=\"profile\"/>\r\n                </Navbar.Brand>\r\n                <Nav activeKey={activeKey} className=\"mr-auto\">\r\n                    <Nav.Link href=\"#/\">Home</Nav.Link>\r\n                    <Nav.Link href=\"#/sort\">Sort</Nav.Link>\r\n                </Nav>\r\n            </Navbar>\r\n            <Component/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Home from \"./components/Home\";\nimport Sort from \"./components/Sort\";\nimport Navigation from \"./components/Navigation\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport \"./index.css\";\n\n//render everything in App as html code in the body of index.html\nReactDOM.render(\n    <HashRouter basename=\"/\">\n        <Route exact path=\"/\" render={() => <Navigation Component={Home} activeKey=\"#/\"/>}/>\n        <Route path=\"/sort\" render={() => <Navigation Component={Sort} activeKey=\"#/sort\"/>}/>\n    </HashRouter>, \n    document.getElementById(\"root\")\n);"],"sourceRoot":""}